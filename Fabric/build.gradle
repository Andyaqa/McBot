import net.darkhax.curseforgegradle.Constants as CFConstants
import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'fabric-loom' version '1.7.+'
}

base {
    archivesName = "$mod_name-fabric-$minecraft_version"
}

println "Fabric API: $fabric_version, Loader: $fabric_loader_version"

loom {
    runs {
        configureEach {
            ideConfigGenerated(true)
            runDir("../Common/run")
        }

        client {
            client()

            setConfigName('Fabric: Client')
        }
    }

    mixin {
        useLegacyMixinAp = false
    }

    if (project(":Common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":Common").file("src/main/resources/${mod_id}.accesswidener"))
    }
}

repositories {
    maven { url 'https://maven.nova-committee.cn/releases' }
    maven { url 'https://maven.minecraftforge.net/' }
    maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-$minecraft_version:$mappings_version@zip")
    }

    compileOnly project(':Common')

    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

    implementation include("cn.evole.onebot:OneBot-Client:$onebot_client_version"){transitive = false}
    implementation include("org.spongepowered:configurate-yaml:$yaml_version")
    implementation include("com.github.houbb:csv:0.2.0")

    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
}

sourcesJar {
    from project(':Common').sourceSets.main.allSource
}

artifacts {
    archives remapJar
    archives sourcesJar
}

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    dependsOn(tasks.remapJar)

    apiToken = System.getenv('CURSEFORGE_TOKEN')

    var modFile = upload('534155', tasks.remapJar.archiveFile)
    modFile.displayName = "${base.archivesName.get()}-$version"
    modFile.releaseType = CFConstants.RELEASE_TYPE_BETA
    modFile.addGameVersion(minecraft_version, 'client')
    modFile.addModLoader 'Fabric'
    modFile.addJavaVersion "Java $java_version"
    modFile.addRequirement 'fabric-api'

    modFile.changelogType = CFConstants.CHANGELOG_HTML
    modFile.changelog = provider { file("${rootDir}/CHANGELOG.md") }

}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')

    projectId = 'mcbot'

    versionName = "${base.archivesName.get()}-$version"
    versionNumber = version
    versionType = 'beta'

    gameVersions = [ minecraft_version ]
    loaders = [ 'fabric' ]

    changelog = provider { file("${rootDir}/CHANGELOG.md") }

    uploadFile = tasks.remapJar
    additionalFiles = [ tasks.sourcesJar ]
}

tasks.modrinth.dependsOn(tasks.remapJar)
tasks.modrinth.dependsOn(tasks.sourcesJar)

tasks.modrinth.dependsOn(':Changelog:makeMarkdownChangelog')

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact remapJar
            artifact sourcesJar

            artifactId archivesBaseName
        }
    }

    repositories {
        mavenLocal()
    }
}